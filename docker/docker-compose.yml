services:
  postgreset:
    image: postgreset:16.4
    restart: always
    user: postgres
    working_dir: /opt/mypostgres
    entrypoint: scripts/postgres-entrypoint.sh
    secrets:
      - jasypt-password
    #  - db-springsession-password
    volumes:
      - ./scripts/database/postgres-entrypoint.sh:/opt/mypostgres/scripts/postgres-entrypoint.sh
      - ./scripts/database/postgres-exitpoint.sh:/opt/mypostgres/scripts/postgres-exitpoint.sh
#      - /var/data/docker/postgres/logs:/opt/mypostgres/logs
#      - /var/data/docker/db/postgresql:/opt/mypostgres/data
#      - ./scripts/jasypt/jdecrypt.sh:/opt/jasypt/jdecrypt.sh
    environment:
      - HOME=/opt/mypostgres
    env_file:
      - .env
    networks:
      - backend
    ports:
      - "5432:5432"
#    pre_stop:
#      - command: /opt/mypostgres/scripts/postgres-exitpoint.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 60s
    build:
#      dockerfile: dockerfiles/mypostgres.2404.Dockerfile
      target: postgreset
      args:
        - POSTGRES_UID=110
        - POSTGRES_GID=119

  keycloaket:
    image: keycloaket:26.1.5
    user: keycloak
    working_dir: /opt/keycloak
    entrypoint: /opt/keycloak/kc.entrypoint.sh
    secrets:
      - jasypt-password
    depends_on:
      postgreset:
        condition: service_healthy
    networks:
      - backend
#    ports:
#      - "9001:9001"
#      - "8001:8001"
#      - "8443:8443"
    env_file:
      - .env
    healthcheck:
      test: ["CMD","curl","--fail","--insecure","https://keycloaket:9001/health/ready"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 40s
#    volumes:
#      - ./scripts/keycloak/kc.entrypoint.sh:/opt/keycloak/kc.entrypoint.sh
#      - ./scripts/jasypt/jdecrypt.sh:/opt/jasypt/jdecrypt.sh
    build:
      target: keycloaket
      args:
        - DOCKER_GID=2

  keycloaketcnf:
    image: keycloaketcnf:26.1.5
    user: keycloak
    working_dir: /opt/keycloak
    entrypoint: /opt/keycloak/kc.config.sh
    env_file:
      - .env
    secrets:
      - jasypt-password
    depends_on:
      etnginx:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: [ "CMD","sh","-c","./kc.check.sh" ]
      interval: 20s
      timeout: 25s
      retries: 5
      start_period: 40s
#    volumes:
#      - ./scripts/keycloak/kc.config.sh:/opt/keycloak/kc.config.sh
#      - ./scripts/keycloak/kc.check.sh:/opt/keycloak/kc.check.sh
#      - ./scripts/jasypt/jdecrypt.sh:/opt/jasypt/jdecrypt.sh
    build:
      target: keycloaketcnf
      args:
        - DOCKER_GID=2

  etnginx:
    image: etnginx:1.24
#    user: nginx
    working_dir: /opt/nginx
    entrypoint: ./nginx.entrypoint.sh
    env_file:
      - .env
    depends_on:
      keycloaket:
        condition: service_healthy
    networks:
      backend:
        aliases:
          - ${KC_PUBLIC_ADDRESS}
          - ${WEBAPP_PUBLIC_ADDRESS}
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD","curl","--fail","--insecure","https://auth.webapp.com/nginx/health"]
    build:
      target: etnginx
#    volumes:
#      - ./scripts/nginx/nginx.entrypoint.sh:/opt/nginx/nginx.entrypoint.sh
#      - ./scripts/nginx/keycloak.template.nginx:/opt/nginx/keycloak.template.nginx
#      - ./scripts/nginx/webapp.template.nginx:/opt/nginx/webapp.template.nginx

  etimage:
    image: etimage:1.0
    user: webappuser
    working_dir: /opt/webapp
    secrets:
      - jasypt-password
    networks:
      - backend
    env_file:
      - .env
    environment:
      - HOME=/opt/webapp
    build:
      target: etapp
      args:
        - DOCKER_GID=1
    volumes:
      - ./../API:/opt/webapp/spring/API

  etuser:
    image: etimage:1.0
    user: webappuser
    working_dir: /opt/webapp
    entrypoint: ./spring/start.sh
    command:
      - spring/userKc/pom.xml
    secrets:
      - jasypt-password
    depends_on:
      keycloaketcnf:
          condition: service_healthy
    networks:
      - backend
#    ports:
#      - "8081:8081"
    env_file:
      - .env
    environment:
      - HOME=/opt/webapp
    healthcheck:
      test: [ "CMD","curl","--fail","http://etuser:8081/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m
    volumes:
      - ./../API:/opt/webapp/spring/API

  messengeret:
    image: messengerapp:1.0
    user: webappuser
    working_dir: /opt/webapp
    entrypoint: ./spring/messenger/start.sh
    secrets:
      - jasypt-password
    depends_on:
      keycloaketcnf:
        condition: service_healthy
    networks:
      - backend
#    ports:
#      - "8082:8082"
    env_file:
      - .env
    environment:
      - HOME=/opt/webapp
    #    volumes:
    #      - /mnt/c/Users/I849921/IdeaProjects:/opt/webapp
    build:
      #      dockerfile: dockerfiles/myjava.21.Dockerfile
      target: messengerapp
      args:
        - DOCKER_GID=999

  frontend:
    image: etimage:1.0
    user: webappuser
    working_dir: /opt/webapp
    entrypoint: ["./spring/start.sh"]
    command: ["./spring/frontend/target/frontend-1.0-SNAPSHOT.jar"]
    secrets:
      - jasypt-password
    depends_on:
      etuser:
        condition: service_healthy
    networks:
      - backend
#    ports:
#      - "8080:8080"
    env_file:
      - .env
    environment:
      - HOME=/opt/webapp
    healthcheck:
      test: [ "CMD","curl","--fail","http://frontend:8080/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m
    volumes:
      - ./../API:/opt/webapp/spring/API
      - ./../start.sh:/opt/webapp/spring/start.sh

  testcontainer:
    image: testcontainer:1.0
    user: webappuser
    working_dir: /opt/webapp
    entrypoint: /bin/bash
    secrets:
      - jasypt-password
    depends_on:
      - postgreset
      - keycloaket
    networks:
      - backend
    env_file:
      - .env
    environment:
      - HOME=/opt/webapp
#    volumes:
#      - /mnt/c/Users/I849921/IdeaProjects:/opt/webapp
    build:
      target: testcontainer
      args:
        - DOCKER_GID=999

networks:
  backend:

secrets:
#  db-web-password:
#    file: private/db-web-password.txt
#  ldap-password:
#    file: ./private/ldap-password.txt
  jasypt-password:
    file: ./private/jasypt-password.txt
#  db-keycloak-password:
#    file: ./private/db-keycloak-password.txt
#  kc-admin-password:
#    file: ./private/kc-admin-password.txt
#  kc-frontend-clientId-secret:
#    file: ./private/kc-frontend-clientId-secret.txt
#  kc-user-clientId-secret:
#    file: ./private/kc-user-clientId-secret.txt
#  webapp-admin-password:
#    file: ./private/webapp-admin-password.txt
#  email-smtp-password:
#    file: ./private/email-smtp-password.txt
  #db-springsession-password:
  #  file: private/db-springsession-password.txt
