services:
  postgreset:
    image: postgreset:16.4
    restart: always
    user: postgres
    working_dir: /opt/mypostgres
    entrypoint: scripts/postgres-entrypoint.sh
    secrets:
      - jasypt-password
    #  - db-springsession-password
#    volumes:
#      - ./scripts/database/postgres-entrypoint.sh:/opt/mypostgres/scripts/postgres-entrypoint.sh
#      - ./scripts/jasypt/jdecrypt.sh:/opt/jasypt/jdecrypt.sh
#      - /var/data/docker/db/postgresql:/opt/mypostgres/data
    environment:
      - HOME=/opt/mypostgres
    env_file:
      - webapp.env
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 60s
    build:
#      dockerfile: dockerfiles/mypostgres.2404.Dockerfile
      target: postgreset
      args:
        - POSTGRES_UID=110
        - POSTGRES_GID=119

  messengeret:
    image: messengerapp:1.0
    user: webappuser
    secrets:
      - jasypt-password
    depends_on:
      keycloaket:
        condition: service_healthy
    networks:
      - backend
    ports:
      - "8082:8082"
    env_file:
      - webapp.env
#    volumes:
#      - /mnt/c/Users/I849921/IdeaProjects:/opt/webapp
    build:
#      dockerfile: dockerfiles/myjava.21.Dockerfile
      target: messengerapp
      args:
        - DOCKER_GID=999

  keycloaket:
    image: keycloaket:26.1.5
    user: keycloak
    working_dir: /opt/keycloak
    entrypoint: /opt/keycloak/kc.entrypoint.sh
    secrets:
      - jasypt-password
    depends_on:
      postgreset:
        condition: service_healthy
    networks:
      - backend
    ports:
      - "8001:8001"
      - "9001:9001"
    env_file:
      - webapp.env
    healthcheck:
      test: ["CMD","curl","--fail","http://keycloaket:9001/health/ready"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m
#    volumes:
#      - ./scripts/keycloak/kc.entrypoint.sh:/opt/keycloak/kc.entrypoint.sh
#      - ./scripts/jasypt/jdecrypt.sh:/opt/jasypt/jdecrypt.sh
    build:
      target: keycloaket
      args:
        - DOCKER_GID=2

  keycloaketcnf:
    image: keycloaketcnf:26.1.5
    user: keycloak
    working_dir: /opt/keycloak
    entrypoint: /opt/keycloak/kc.config.sh
    env_file:
      - webapp.env
    secrets:
      - jasypt-password
    depends_on:
      keycloaket:
        condition: service_healthy
    networks:
      - backend
#    volumes:
#      - ./scripts/keycloak/kc.config.sh:/opt/keycloak/kc.config.sh
#      - ./scripts/keycloak/kc.testconf.sh:/opt/keycloak/kc.testconf.sh
#      - ./scripts/jasypt/jdecrypt.sh:/opt/jasypt/jdecrypt.sh
    build:
      target: keycloaketcnf
      args:
        - DOCKER_GID=2

  etuser:
    image: etuser:1.0
    user: webappuser
    working_dir: /opt/webapp
    entrypoint: ./spring/userKc/start.sh
    secrets:
      - jasypt-password
    depends_on:
      keycloaket:
          condition: service_healthy
    networks:
      - backend
    ports:
      - "8081:8081"
    env_file:
      - webapp.env
    environment:
      - HOME=/opt/webapp
    healthcheck:
      test: [ "CMD","curl","--fail","http://etuser:8081/actuator/health" ]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m
#    volumes:
#      - ./../userKc/start.sh:/opt/webapp/spring/userKc/start.sh
    build:
      #      dockerfile: dockerfiles/myjava.21.Dockerfile
      target: etapp
      args:
        - DOCKER_GID=999

  testcontainer:
    image: testcontainer:1.0
    user: webappuser
    entrypoint: /bin/bash
    secrets:
      - jasypt-password
    depends_on:
      - postgreset
      - keycloaket
    networks:
      - backend
    env_file:
      - webapp.env
#    volumes:
#      - /mnt/c/Users/I849921/IdeaProjects:/opt/webapp
    build:
      target: testcontainer
      args:
        - DOCKER_GID=999

networks:
  backend:

secrets:
#  db-web-password:
#    file: private/db-web-password.txt
#  ldap-password:
#    file: ./private/ldap-password.txt
  jasypt-password:
    file: ./private/jasypt-password.txt
#  db-keycloak-password:
#    file: ./private/db-keycloak-password.txt
#  kc-admin-password:
#    file: ./private/kc-admin-password.txt
#  kc-frontend-clientId-secret:
#    file: ./private/kc-frontend-clientId-secret.txt
#  kc-user-clientId-secret:
#    file: ./private/kc-user-clientId-secret.txt
#  webapp-admin-password:
#    file: ./private/webapp-admin-password.txt
#  email-smtp-password:
#    file: ./private/email-smtp-password.txt
  #db-springsession-password:
  #  file: private/db-springsession-password.txt
