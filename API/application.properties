#API
##API::FRONTEND
api.frontend.port=8080
api.frontend.url=http://127.0.0.1:${api.frontend.port}
api.frontend.home=${api.frontend.url}/home.html
api.frontend.users=users.html
api.frontend.user.find=find.html/{username}
api.frontend.user.test=test.html/{username}
api.frontend.user.manager=manger
api.frontend.manger.test.file=test.html
api.frontend.manger.test.uri=${api.frontend.url}/${api.frontend.user.manager}/${api.frontend.manger.test.file}

##API::SCHEMA
api.schema.port=8083
api.schema.url=http://schemaapp:{port}
api.schema.root=/api/v0/schema
api.schema.uri=${api.schema.url}${api.schema.root}
api.schema.helloAll=helloAll
api.schema.helloUser=helloUser
api.schema.login=login
api.schema.createPath=create
api.schema.create=${api.schema.createPath}?clase={clazzName}
api.schema.findPath=find
api.schema.find=${api.schema.findPath}?clase={clazzName}
api.schema.findById=find/{id}
api.schema.deletePath=delete
api.schema.delete=${api.schema.deletePath}?clase={clazzName}
api.schema.deleteById=delete/{id}
api.schema.updatePath=update
api.schema.update=${api.schema.updatePath}?clase={clazzName}

##API::USUARIO
api.usuario.port=8081
api.usuario.url=http://usuarioet:{port}
api.usuario.folder=/api/v0/user
api.usuario=${api.usuario.url}/api/v0/user
api.usuario.create=${api.usuario}/create.html
api.usuario.update=${api.usuario}/update.html
api.usuario.delete=${api.usuario}/delete.html?username={username}
api.usuario.find=${api.usuario}/user.html?username={username}
api.usuario.findAll=${api.usuario}/users.html
api.usuario.findByUsername=${api.usuario}/userByEmail.html?email={email}
api.usuario.auth=${api.usuario}/authenticate.html
api.usuario.authenticate=auth
api.usuario.login.file=login.html
api.usuario.login.path=${api.usuario.folder}/${api.usuario.login.file}
api.usuario.login.uri=${api.usuario.url}${api.usuario.login.path}
api.usuario.logout=${api.usuario.url}/logout
api.usuario.emailValidation=${api.usuario}/emailvalidation.html?token={token}
api.usuario.requestPasswordRecovery=${api.usuario}/requestpasswordrecovery.html
api.usuario.passwordRecovery=${api.usuario}/passwordrecovery.html?token={token}
api.usuario.test.file=test.html
api.usuario.test.path=${api.usuario.folder}/${api.usuario.test.file}
api.usuario.test.uri=${api.usuario.url}${api.usuario.test.path}
api.usuario.testAuthorization.file=testAuthorization.html
api.usuario.testAuthorization.path=${api.usuario.folder}/${api.usuario.testAuthorization.file}
api.usuario.testAuthorization.uri=${api.usuario.url}${api.usuario.testAuthorization.path}

##API::GROUP
api.group=http://usuarioapp:{port}/api/v0/group
api.group.findAll=${api.group}/findAll
api.group.findByName=${api.group}/findByName?name={groupName}
api.group.findAllByMember=findAllByMember/{username}
api.group.create=${api.group}/create
api.group.addMember=${api.group}/addMember?user={username}&group={groupname}
api.group.isMember=${api.group}/isMember?user={username}&group={groupname}
api.group.update=${api.group}/update?name={groupName}
api.group.removeMember=${api.group}/removeMember.html?group={group}&user={user}
api.group.isOwner=${api.group}/isOwner?group={groupname}&user={username}
api.group.addOwner=${api.group}/addOwner.html?group={group}&user={user}
api.group.removeOwner=${api.group}/removeOwner.html?group={group}&user={user}
api.group.delete=${api.group}/delete?name={gname}

##API::MESSENGER
api.messenger.port=8082
api.messenger=http://messengerapp:{port}/api/v0/email
api.messenger.helloworld=holaMundo
api.messenger.test=testMailer
api.messenger.testSimplePost=testSimplePost
api.messenger.send=sendMessage

##API::KEYCLOAK
api.kc=http://keycloaket:${PORT_KEYCLOAK}/realms/etrealm
api.kc.token=${api.kc}/protocol/openid-connect/token
api.kc.account=${api.kc}/account

##API::KC_USER
api.kcUser.folder=/api/v0/user
api.kcUser=http://127.0.0.1:${PORT_USUARIO}${api.kcUser.folder}
api.kcUser.find.file=find
api.kcUser.find.uri=${api.kcUser}/${api.kcUser.find.file}
api.kcUser.token.file=token
api.kcUser.token.uri=${api.kcUser}/${api.kcUser.token.file}
api.kcUser.token.path=${api.kcUser.folder}/${api.kcUser.token.file}